/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trianz.lms.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.trianz.lms.model.LMSLeaveType;
import com.trianz.lms.model.LMSLeaveTypeModel;
import com.trianz.lms.model.LMSLeaveTypeSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LMSLeaveType service. Represents a row in the &quot;LMSLeaveType&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.trianz.lms.model.LMSLeaveTypeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LMSLeaveTypeImpl}.
 * </p>
 *
 * @author
 * @see LMSLeaveTypeImpl
 * @see com.trianz.lms.model.LMSLeaveType
 * @see com.trianz.lms.model.LMSLeaveTypeModel
 * @generated
 */
@JSON(strict = true)
public class LMSLeaveTypeModelImpl extends BaseModelImpl<LMSLeaveType>
	implements LMSLeaveTypeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a l m s leave type model instance should use the {@link com.trianz.lms.model.LMSLeaveType} interface instead.
	 */
	public static final String TABLE_NAME = "LMSLeaveType";
	public static final Object[][] TABLE_COLUMNS = {
			{ "LeaveTypeCode", Types.INTEGER },
			{ "LeaveTypeName", Types.VARCHAR },
			{ "CountriesApplicable", Types.VARCHAR },
			{ "MonthlyAccrual", Types.VARCHAR },
			{ "AccrualValue", Types.DOUBLE },
			{ "CreditReset", Types.VARCHAR },
			{ "ResetInterval", Types.VARCHAR },
			{ "ResetDay", Types.INTEGER },
			{ "ExcludeWeekEnds", Types.VARCHAR },
			{ "ExcludeHolidays", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table LMSLeaveType (LeaveTypeCode INTEGER not null primary key,LeaveTypeName VARCHAR(75) null,CountriesApplicable VARCHAR(75) null,MonthlyAccrual VARCHAR(75) null,AccrualValue DOUBLE,CreditReset VARCHAR(75) null,ResetInterval VARCHAR(75) null,ResetDay INTEGER,ExcludeWeekEnds VARCHAR(75) null,ExcludeHolidays VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table LMSLeaveType";
	public static final String ORDER_BY_JPQL = " ORDER BY lmsLeaveType.LeaveTypeCode ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LMSLeaveType.LeaveTypeCode ASC";
	public static final String DATA_SOURCE = "devDS";
	public static final String SESSION_FACTORY = "devSessionFactory";
	public static final String TX_MANAGER = "devTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.trianz.lms.model.LMSLeaveType"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.trianz.lms.model.LMSLeaveType"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.trianz.lms.model.LMSLeaveType"),
			true);
	public static long COUNTRIESAPPLICABLE_COLUMN_BITMASK = 1L;
	public static long LEAVETYPECODE_COLUMN_BITMASK = 2L;
	public static long LEAVETYPENAME_COLUMN_BITMASK = 4L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LMSLeaveType toModel(LMSLeaveTypeSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LMSLeaveType model = new LMSLeaveTypeImpl();

		model.setLeaveTypeCode(soapModel.getLeaveTypeCode());
		model.setLeaveTypeName(soapModel.getLeaveTypeName());
		model.setCountriesApplicable(soapModel.getCountriesApplicable());
		model.setMonthlyAccrual(soapModel.getMonthlyAccrual());
		model.setAccrualValue(soapModel.getAccrualValue());
		model.setCreditReset(soapModel.getCreditReset());
		model.setResetInterval(soapModel.getResetInterval());
		model.setResetDay(soapModel.getResetDay());
		model.setExcludeWeekEnds(soapModel.getExcludeWeekEnds());
		model.setExcludeHolidays(soapModel.getExcludeHolidays());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LMSLeaveType> toModels(LMSLeaveTypeSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LMSLeaveType> models = new ArrayList<LMSLeaveType>(soapModels.length);

		for (LMSLeaveTypeSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.trianz.lms.model.LMSLeaveType"));

	public LMSLeaveTypeModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _LeaveTypeCode;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setLeaveTypeCode(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _LeaveTypeCode;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LMSLeaveType.class;
	}

	@Override
	public String getModelClassName() {
		return LMSLeaveType.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("LeaveTypeCode", getLeaveTypeCode());
		attributes.put("LeaveTypeName", getLeaveTypeName());
		attributes.put("CountriesApplicable", getCountriesApplicable());
		attributes.put("MonthlyAccrual", getMonthlyAccrual());
		attributes.put("AccrualValue", getAccrualValue());
		attributes.put("CreditReset", getCreditReset());
		attributes.put("ResetInterval", getResetInterval());
		attributes.put("ResetDay", getResetDay());
		attributes.put("ExcludeWeekEnds", getExcludeWeekEnds());
		attributes.put("ExcludeHolidays", getExcludeHolidays());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer LeaveTypeCode = (Integer)attributes.get("LeaveTypeCode");

		if (LeaveTypeCode != null) {
			setLeaveTypeCode(LeaveTypeCode);
		}

		String LeaveTypeName = (String)attributes.get("LeaveTypeName");

		if (LeaveTypeName != null) {
			setLeaveTypeName(LeaveTypeName);
		}

		String CountriesApplicable = (String)attributes.get(
				"CountriesApplicable");

		if (CountriesApplicable != null) {
			setCountriesApplicable(CountriesApplicable);
		}

		String MonthlyAccrual = (String)attributes.get("MonthlyAccrual");

		if (MonthlyAccrual != null) {
			setMonthlyAccrual(MonthlyAccrual);
		}

		Double AccrualValue = (Double)attributes.get("AccrualValue");

		if (AccrualValue != null) {
			setAccrualValue(AccrualValue);
		}

		String CreditReset = (String)attributes.get("CreditReset");

		if (CreditReset != null) {
			setCreditReset(CreditReset);
		}

		String ResetInterval = (String)attributes.get("ResetInterval");

		if (ResetInterval != null) {
			setResetInterval(ResetInterval);
		}

		Integer ResetDay = (Integer)attributes.get("ResetDay");

		if (ResetDay != null) {
			setResetDay(ResetDay);
		}

		String ExcludeWeekEnds = (String)attributes.get("ExcludeWeekEnds");

		if (ExcludeWeekEnds != null) {
			setExcludeWeekEnds(ExcludeWeekEnds);
		}

		String ExcludeHolidays = (String)attributes.get("ExcludeHolidays");

		if (ExcludeHolidays != null) {
			setExcludeHolidays(ExcludeHolidays);
		}
	}

	@JSON
	@Override
	public int getLeaveTypeCode() {
		return _LeaveTypeCode;
	}

	@Override
	public void setLeaveTypeCode(int LeaveTypeCode) {
		_columnBitmask = -1L;

		if (!_setOriginalLeaveTypeCode) {
			_setOriginalLeaveTypeCode = true;

			_originalLeaveTypeCode = _LeaveTypeCode;
		}

		_LeaveTypeCode = LeaveTypeCode;
	}

	public int getOriginalLeaveTypeCode() {
		return _originalLeaveTypeCode;
	}

	@JSON
	@Override
	public String getLeaveTypeName() {
		if (_LeaveTypeName == null) {
			return StringPool.BLANK;
		}
		else {
			return _LeaveTypeName;
		}
	}

	@Override
	public void setLeaveTypeName(String LeaveTypeName) {
		_columnBitmask |= LEAVETYPENAME_COLUMN_BITMASK;

		if (_originalLeaveTypeName == null) {
			_originalLeaveTypeName = _LeaveTypeName;
		}

		_LeaveTypeName = LeaveTypeName;
	}

	public String getOriginalLeaveTypeName() {
		return GetterUtil.getString(_originalLeaveTypeName);
	}

	@JSON
	@Override
	public String getCountriesApplicable() {
		if (_CountriesApplicable == null) {
			return StringPool.BLANK;
		}
		else {
			return _CountriesApplicable;
		}
	}

	@Override
	public void setCountriesApplicable(String CountriesApplicable) {
		_columnBitmask |= COUNTRIESAPPLICABLE_COLUMN_BITMASK;

		if (_originalCountriesApplicable == null) {
			_originalCountriesApplicable = _CountriesApplicable;
		}

		_CountriesApplicable = CountriesApplicable;
	}

	public String getOriginalCountriesApplicable() {
		return GetterUtil.getString(_originalCountriesApplicable);
	}

	@JSON
	@Override
	public String getMonthlyAccrual() {
		if (_MonthlyAccrual == null) {
			return StringPool.BLANK;
		}
		else {
			return _MonthlyAccrual;
		}
	}

	@Override
	public void setMonthlyAccrual(String MonthlyAccrual) {
		_MonthlyAccrual = MonthlyAccrual;
	}

	@JSON
	@Override
	public double getAccrualValue() {
		return _AccrualValue;
	}

	@Override
	public void setAccrualValue(double AccrualValue) {
		_AccrualValue = AccrualValue;
	}

	@JSON
	@Override
	public String getCreditReset() {
		if (_CreditReset == null) {
			return StringPool.BLANK;
		}
		else {
			return _CreditReset;
		}
	}

	@Override
	public void setCreditReset(String CreditReset) {
		_CreditReset = CreditReset;
	}

	@JSON
	@Override
	public String getResetInterval() {
		if (_ResetInterval == null) {
			return StringPool.BLANK;
		}
		else {
			return _ResetInterval;
		}
	}

	@Override
	public void setResetInterval(String ResetInterval) {
		_ResetInterval = ResetInterval;
	}

	@JSON
	@Override
	public int getResetDay() {
		return _ResetDay;
	}

	@Override
	public void setResetDay(int ResetDay) {
		_ResetDay = ResetDay;
	}

	@JSON
	@Override
	public String getExcludeWeekEnds() {
		if (_ExcludeWeekEnds == null) {
			return StringPool.BLANK;
		}
		else {
			return _ExcludeWeekEnds;
		}
	}

	@Override
	public void setExcludeWeekEnds(String ExcludeWeekEnds) {
		_ExcludeWeekEnds = ExcludeWeekEnds;
	}

	@JSON
	@Override
	public String getExcludeHolidays() {
		if (_ExcludeHolidays == null) {
			return StringPool.BLANK;
		}
		else {
			return _ExcludeHolidays;
		}
	}

	@Override
	public void setExcludeHolidays(String ExcludeHolidays) {
		_ExcludeHolidays = ExcludeHolidays;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public LMSLeaveType toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LMSLeaveType)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LMSLeaveTypeImpl lmsLeaveTypeImpl = new LMSLeaveTypeImpl();

		lmsLeaveTypeImpl.setLeaveTypeCode(getLeaveTypeCode());
		lmsLeaveTypeImpl.setLeaveTypeName(getLeaveTypeName());
		lmsLeaveTypeImpl.setCountriesApplicable(getCountriesApplicable());
		lmsLeaveTypeImpl.setMonthlyAccrual(getMonthlyAccrual());
		lmsLeaveTypeImpl.setAccrualValue(getAccrualValue());
		lmsLeaveTypeImpl.setCreditReset(getCreditReset());
		lmsLeaveTypeImpl.setResetInterval(getResetInterval());
		lmsLeaveTypeImpl.setResetDay(getResetDay());
		lmsLeaveTypeImpl.setExcludeWeekEnds(getExcludeWeekEnds());
		lmsLeaveTypeImpl.setExcludeHolidays(getExcludeHolidays());

		lmsLeaveTypeImpl.resetOriginalValues();

		return lmsLeaveTypeImpl;
	}

	@Override
	public int compareTo(LMSLeaveType lmsLeaveType) {
		int value = 0;

		if (getLeaveTypeCode() < lmsLeaveType.getLeaveTypeCode()) {
			value = -1;
		}
		else if (getLeaveTypeCode() > lmsLeaveType.getLeaveTypeCode()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LMSLeaveType)) {
			return false;
		}

		LMSLeaveType lmsLeaveType = (LMSLeaveType)obj;

		int primaryKey = lmsLeaveType.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LMSLeaveTypeModelImpl lmsLeaveTypeModelImpl = this;

		lmsLeaveTypeModelImpl._originalLeaveTypeCode = lmsLeaveTypeModelImpl._LeaveTypeCode;

		lmsLeaveTypeModelImpl._setOriginalLeaveTypeCode = false;

		lmsLeaveTypeModelImpl._originalLeaveTypeName = lmsLeaveTypeModelImpl._LeaveTypeName;

		lmsLeaveTypeModelImpl._originalCountriesApplicable = lmsLeaveTypeModelImpl._CountriesApplicable;

		lmsLeaveTypeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LMSLeaveType> toCacheModel() {
		LMSLeaveTypeCacheModel lmsLeaveTypeCacheModel = new LMSLeaveTypeCacheModel();

		lmsLeaveTypeCacheModel.LeaveTypeCode = getLeaveTypeCode();

		lmsLeaveTypeCacheModel.LeaveTypeName = getLeaveTypeName();

		String LeaveTypeName = lmsLeaveTypeCacheModel.LeaveTypeName;

		if ((LeaveTypeName != null) && (LeaveTypeName.length() == 0)) {
			lmsLeaveTypeCacheModel.LeaveTypeName = null;
		}

		lmsLeaveTypeCacheModel.CountriesApplicable = getCountriesApplicable();

		String CountriesApplicable = lmsLeaveTypeCacheModel.CountriesApplicable;

		if ((CountriesApplicable != null) &&
				(CountriesApplicable.length() == 0)) {
			lmsLeaveTypeCacheModel.CountriesApplicable = null;
		}

		lmsLeaveTypeCacheModel.MonthlyAccrual = getMonthlyAccrual();

		String MonthlyAccrual = lmsLeaveTypeCacheModel.MonthlyAccrual;

		if ((MonthlyAccrual != null) && (MonthlyAccrual.length() == 0)) {
			lmsLeaveTypeCacheModel.MonthlyAccrual = null;
		}

		lmsLeaveTypeCacheModel.AccrualValue = getAccrualValue();

		lmsLeaveTypeCacheModel.CreditReset = getCreditReset();

		String CreditReset = lmsLeaveTypeCacheModel.CreditReset;

		if ((CreditReset != null) && (CreditReset.length() == 0)) {
			lmsLeaveTypeCacheModel.CreditReset = null;
		}

		lmsLeaveTypeCacheModel.ResetInterval = getResetInterval();

		String ResetInterval = lmsLeaveTypeCacheModel.ResetInterval;

		if ((ResetInterval != null) && (ResetInterval.length() == 0)) {
			lmsLeaveTypeCacheModel.ResetInterval = null;
		}

		lmsLeaveTypeCacheModel.ResetDay = getResetDay();

		lmsLeaveTypeCacheModel.ExcludeWeekEnds = getExcludeWeekEnds();

		String ExcludeWeekEnds = lmsLeaveTypeCacheModel.ExcludeWeekEnds;

		if ((ExcludeWeekEnds != null) && (ExcludeWeekEnds.length() == 0)) {
			lmsLeaveTypeCacheModel.ExcludeWeekEnds = null;
		}

		lmsLeaveTypeCacheModel.ExcludeHolidays = getExcludeHolidays();

		String ExcludeHolidays = lmsLeaveTypeCacheModel.ExcludeHolidays;

		if ((ExcludeHolidays != null) && (ExcludeHolidays.length() == 0)) {
			lmsLeaveTypeCacheModel.ExcludeHolidays = null;
		}

		return lmsLeaveTypeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{LeaveTypeCode=");
		sb.append(getLeaveTypeCode());
		sb.append(", LeaveTypeName=");
		sb.append(getLeaveTypeName());
		sb.append(", CountriesApplicable=");
		sb.append(getCountriesApplicable());
		sb.append(", MonthlyAccrual=");
		sb.append(getMonthlyAccrual());
		sb.append(", AccrualValue=");
		sb.append(getAccrualValue());
		sb.append(", CreditReset=");
		sb.append(getCreditReset());
		sb.append(", ResetInterval=");
		sb.append(getResetInterval());
		sb.append(", ResetDay=");
		sb.append(getResetDay());
		sb.append(", ExcludeWeekEnds=");
		sb.append(getExcludeWeekEnds());
		sb.append(", ExcludeHolidays=");
		sb.append(getExcludeHolidays());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.trianz.lms.model.LMSLeaveType");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>LeaveTypeCode</column-name><column-value><![CDATA[");
		sb.append(getLeaveTypeCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LeaveTypeName</column-name><column-value><![CDATA[");
		sb.append(getLeaveTypeName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CountriesApplicable</column-name><column-value><![CDATA[");
		sb.append(getCountriesApplicable());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>MonthlyAccrual</column-name><column-value><![CDATA[");
		sb.append(getMonthlyAccrual());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>AccrualValue</column-name><column-value><![CDATA[");
		sb.append(getAccrualValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>CreditReset</column-name><column-value><![CDATA[");
		sb.append(getCreditReset());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ResetInterval</column-name><column-value><![CDATA[");
		sb.append(getResetInterval());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ResetDay</column-name><column-value><![CDATA[");
		sb.append(getResetDay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ExcludeWeekEnds</column-name><column-value><![CDATA[");
		sb.append(getExcludeWeekEnds());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ExcludeHolidays</column-name><column-value><![CDATA[");
		sb.append(getExcludeHolidays());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LMSLeaveType.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LMSLeaveType.class
		};
	private int _LeaveTypeCode;
	private int _originalLeaveTypeCode;
	private boolean _setOriginalLeaveTypeCode;
	private String _LeaveTypeName;
	private String _originalLeaveTypeName;
	private String _CountriesApplicable;
	private String _originalCountriesApplicable;
	private String _MonthlyAccrual;
	private double _AccrualValue;
	private String _CreditReset;
	private String _ResetInterval;
	private int _ResetDay;
	private String _ExcludeWeekEnds;
	private String _ExcludeHolidays;
	private long _columnBitmask;
	private LMSLeaveType _escapedModel;
}