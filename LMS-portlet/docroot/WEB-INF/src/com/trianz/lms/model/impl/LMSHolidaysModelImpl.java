/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trianz.lms.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.trianz.lms.model.LMSHolidays;
import com.trianz.lms.model.LMSHolidaysModel;
import com.trianz.lms.model.LMSHolidaysSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LMSHolidays service. Represents a row in the &quot;LMSHolidays&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.trianz.lms.model.LMSHolidaysModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LMSHolidaysImpl}.
 * </p>
 *
 * @author
 * @see LMSHolidaysImpl
 * @see com.trianz.lms.model.LMSHolidays
 * @see com.trianz.lms.model.LMSHolidaysModel
 * @generated
 */
@JSON(strict = true)
public class LMSHolidaysModelImpl extends BaseModelImpl<LMSHolidays>
	implements LMSHolidaysModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a l m s holidays model instance should use the {@link com.trianz.lms.model.LMSHolidays} interface instead.
	 */
	public static final String TABLE_NAME = "LMSHolidays";
	public static final Object[][] TABLE_COLUMNS = {
			{ "HolidayId", Types.INTEGER },
			{ "HolidayDate", Types.TIMESTAMP },
			{ "Occassion", Types.VARCHAR },
			{ "HolidayYear", Types.INTEGER },
			{ "LocationsApplicable", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table LMSHolidays (HolidayId INTEGER not null primary key IDENTITY,HolidayDate DATE null,Occassion VARCHAR(75) null,HolidayYear INTEGER,LocationsApplicable VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table LMSHolidays";
	public static final String ORDER_BY_JPQL = " ORDER BY lmsHolidays.HolidayId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LMSHolidays.HolidayId ASC";
	public static final String DATA_SOURCE = "devDS";
	public static final String SESSION_FACTORY = "devSessionFactory";
	public static final String TX_MANAGER = "devTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.trianz.lms.model.LMSHolidays"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.trianz.lms.model.LMSHolidays"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.trianz.lms.model.LMSHolidays"),
			true);
	public static long HOLIDAYYEAR_COLUMN_BITMASK = 1L;
	public static long HOLIDAYID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LMSHolidays toModel(LMSHolidaysSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LMSHolidays model = new LMSHolidaysImpl();

		model.setHolidayId(soapModel.getHolidayId());
		model.setHolidayDate(soapModel.getHolidayDate());
		model.setOccassion(soapModel.getOccassion());
		model.setHolidayYear(soapModel.getHolidayYear());
		model.setLocationsApplicable(soapModel.getLocationsApplicable());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LMSHolidays> toModels(LMSHolidaysSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LMSHolidays> models = new ArrayList<LMSHolidays>(soapModels.length);

		for (LMSHolidaysSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.trianz.lms.model.LMSHolidays"));

	public LMSHolidaysModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _HolidayId;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setHolidayId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _HolidayId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LMSHolidays.class;
	}

	@Override
	public String getModelClassName() {
		return LMSHolidays.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("HolidayId", getHolidayId());
		attributes.put("HolidayDate", getHolidayDate());
		attributes.put("Occassion", getOccassion());
		attributes.put("HolidayYear", getHolidayYear());
		attributes.put("LocationsApplicable", getLocationsApplicable());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer HolidayId = (Integer)attributes.get("HolidayId");

		if (HolidayId != null) {
			setHolidayId(HolidayId);
		}

		Date HolidayDate = (Date)attributes.get("HolidayDate");

		if (HolidayDate != null) {
			setHolidayDate(HolidayDate);
		}

		String Occassion = (String)attributes.get("Occassion");

		if (Occassion != null) {
			setOccassion(Occassion);
		}

		Integer HolidayYear = (Integer)attributes.get("HolidayYear");

		if (HolidayYear != null) {
			setHolidayYear(HolidayYear);
		}

		String LocationsApplicable = (String)attributes.get(
				"LocationsApplicable");

		if (LocationsApplicable != null) {
			setLocationsApplicable(LocationsApplicable);
		}
	}

	@JSON
	@Override
	public int getHolidayId() {
		return _HolidayId;
	}

	@Override
	public void setHolidayId(int HolidayId) {
		_columnBitmask = -1L;

		_HolidayId = HolidayId;
	}

	@JSON
	@Override
	public Date getHolidayDate() {
		return _HolidayDate;
	}

	@Override
	public void setHolidayDate(Date HolidayDate) {
		_HolidayDate = HolidayDate;
	}

	@JSON
	@Override
	public String getOccassion() {
		if (_Occassion == null) {
			return StringPool.BLANK;
		}
		else {
			return _Occassion;
		}
	}

	@Override
	public void setOccassion(String Occassion) {
		_Occassion = Occassion;
	}

	@JSON
	@Override
	public int getHolidayYear() {
		return _HolidayYear;
	}

	@Override
	public void setHolidayYear(int HolidayYear) {
		_columnBitmask |= HOLIDAYYEAR_COLUMN_BITMASK;

		if (!_setOriginalHolidayYear) {
			_setOriginalHolidayYear = true;

			_originalHolidayYear = _HolidayYear;
		}

		_HolidayYear = HolidayYear;
	}

	public int getOriginalHolidayYear() {
		return _originalHolidayYear;
	}

	@JSON
	@Override
	public String getLocationsApplicable() {
		if (_LocationsApplicable == null) {
			return StringPool.BLANK;
		}
		else {
			return _LocationsApplicable;
		}
	}

	@Override
	public void setLocationsApplicable(String LocationsApplicable) {
		_LocationsApplicable = LocationsApplicable;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public LMSHolidays toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LMSHolidays)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LMSHolidaysImpl lmsHolidaysImpl = new LMSHolidaysImpl();

		lmsHolidaysImpl.setHolidayId(getHolidayId());
		lmsHolidaysImpl.setHolidayDate(getHolidayDate());
		lmsHolidaysImpl.setOccassion(getOccassion());
		lmsHolidaysImpl.setHolidayYear(getHolidayYear());
		lmsHolidaysImpl.setLocationsApplicable(getLocationsApplicable());

		lmsHolidaysImpl.resetOriginalValues();

		return lmsHolidaysImpl;
	}

	@Override
	public int compareTo(LMSHolidays lmsHolidays) {
		int value = 0;

		if (getHolidayId() < lmsHolidays.getHolidayId()) {
			value = -1;
		}
		else if (getHolidayId() > lmsHolidays.getHolidayId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LMSHolidays)) {
			return false;
		}

		LMSHolidays lmsHolidays = (LMSHolidays)obj;

		int primaryKey = lmsHolidays.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LMSHolidaysModelImpl lmsHolidaysModelImpl = this;

		lmsHolidaysModelImpl._originalHolidayYear = lmsHolidaysModelImpl._HolidayYear;

		lmsHolidaysModelImpl._setOriginalHolidayYear = false;

		lmsHolidaysModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LMSHolidays> toCacheModel() {
		LMSHolidaysCacheModel lmsHolidaysCacheModel = new LMSHolidaysCacheModel();

		lmsHolidaysCacheModel.HolidayId = getHolidayId();

		Date HolidayDate = getHolidayDate();

		if (HolidayDate != null) {
			lmsHolidaysCacheModel.HolidayDate = HolidayDate.getTime();
		}
		else {
			lmsHolidaysCacheModel.HolidayDate = Long.MIN_VALUE;
		}

		lmsHolidaysCacheModel.Occassion = getOccassion();

		String Occassion = lmsHolidaysCacheModel.Occassion;

		if ((Occassion != null) && (Occassion.length() == 0)) {
			lmsHolidaysCacheModel.Occassion = null;
		}

		lmsHolidaysCacheModel.HolidayYear = getHolidayYear();

		lmsHolidaysCacheModel.LocationsApplicable = getLocationsApplicable();

		String LocationsApplicable = lmsHolidaysCacheModel.LocationsApplicable;

		if ((LocationsApplicable != null) &&
				(LocationsApplicable.length() == 0)) {
			lmsHolidaysCacheModel.LocationsApplicable = null;
		}

		return lmsHolidaysCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{HolidayId=");
		sb.append(getHolidayId());
		sb.append(", HolidayDate=");
		sb.append(getHolidayDate());
		sb.append(", Occassion=");
		sb.append(getOccassion());
		sb.append(", HolidayYear=");
		sb.append(getHolidayYear());
		sb.append(", LocationsApplicable=");
		sb.append(getLocationsApplicable());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.trianz.lms.model.LMSHolidays");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>HolidayId</column-name><column-value><![CDATA[");
		sb.append(getHolidayId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>HolidayDate</column-name><column-value><![CDATA[");
		sb.append(getHolidayDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Occassion</column-name><column-value><![CDATA[");
		sb.append(getOccassion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>HolidayYear</column-name><column-value><![CDATA[");
		sb.append(getHolidayYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>LocationsApplicable</column-name><column-value><![CDATA[");
		sb.append(getLocationsApplicable());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LMSHolidays.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LMSHolidays.class
		};
	private int _HolidayId;
	private Date _HolidayDate;
	private String _Occassion;
	private int _HolidayYear;
	private int _originalHolidayYear;
	private boolean _setOriginalHolidayYear;
	private String _LocationsApplicable;
	private long _columnBitmask;
	private LMSHolidays _escapedModel;
}