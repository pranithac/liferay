/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trianz.lms.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;

import com.trianz.lms.model.LMSWeekends;
import com.trianz.lms.model.LMSWeekendsModel;
import com.trianz.lms.model.LMSWeekendsSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the LMSWeekends service. Represents a row in the &quot;LMSWeekends&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.trianz.lms.model.LMSWeekendsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LMSWeekendsImpl}.
 * </p>
 *
 * @author
 * @see LMSWeekendsImpl
 * @see com.trianz.lms.model.LMSWeekends
 * @see com.trianz.lms.model.LMSWeekendsModel
 * @generated
 */
@JSON(strict = true)
public class LMSWeekendsModelImpl extends BaseModelImpl<LMSWeekends>
	implements LMSWeekendsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a l m s weekends model instance should use the {@link com.trianz.lms.model.LMSWeekends} interface instead.
	 */
	public static final String TABLE_NAME = "LMSWeekends";
	public static final Object[][] TABLE_COLUMNS = {
			{ "LocationId", Types.INTEGER },
			{ "Location", Types.VARCHAR },
			{ "WeekendDays", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table LMSWeekends (LocationId INTEGER not null primary key IDENTITY,Location VARCHAR(75) null,WeekendDays VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table LMSWeekends";
	public static final String ORDER_BY_JPQL = " ORDER BY lmsWeekends.LocationId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY LMSWeekends.LocationId ASC";
	public static final String DATA_SOURCE = "devDS";
	public static final String SESSION_FACTORY = "devSessionFactory";
	public static final String TX_MANAGER = "devTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.trianz.lms.model.LMSWeekends"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.trianz.lms.model.LMSWeekends"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.trianz.lms.model.LMSWeekends"),
			true);
	public static long LOCATION_COLUMN_BITMASK = 1L;
	public static long LOCATIONID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static LMSWeekends toModel(LMSWeekendsSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		LMSWeekends model = new LMSWeekendsImpl();

		model.setLocationId(soapModel.getLocationId());
		model.setLocation(soapModel.getLocation());
		model.setWeekendDays(soapModel.getWeekendDays());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<LMSWeekends> toModels(LMSWeekendsSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<LMSWeekends> models = new ArrayList<LMSWeekends>(soapModels.length);

		for (LMSWeekendsSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.trianz.lms.model.LMSWeekends"));

	public LMSWeekendsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _LocationId;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setLocationId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _LocationId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return LMSWeekends.class;
	}

	@Override
	public String getModelClassName() {
		return LMSWeekends.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("LocationId", getLocationId());
		attributes.put("Location", getLocation());
		attributes.put("WeekendDays", getWeekendDays());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer LocationId = (Integer)attributes.get("LocationId");

		if (LocationId != null) {
			setLocationId(LocationId);
		}

		String Location = (String)attributes.get("Location");

		if (Location != null) {
			setLocation(Location);
		}

		String WeekendDays = (String)attributes.get("WeekendDays");

		if (WeekendDays != null) {
			setWeekendDays(WeekendDays);
		}
	}

	@JSON
	@Override
	public int getLocationId() {
		return _LocationId;
	}

	@Override
	public void setLocationId(int LocationId) {
		_LocationId = LocationId;
	}

	@JSON
	@Override
	public String getLocation() {
		if (_Location == null) {
			return StringPool.BLANK;
		}
		else {
			return _Location;
		}
	}

	@Override
	public void setLocation(String Location) {
		_columnBitmask |= LOCATION_COLUMN_BITMASK;

		if (_originalLocation == null) {
			_originalLocation = _Location;
		}

		_Location = Location;
	}

	public String getOriginalLocation() {
		return GetterUtil.getString(_originalLocation);
	}

	@JSON
	@Override
	public String getWeekendDays() {
		if (_WeekendDays == null) {
			return StringPool.BLANK;
		}
		else {
			return _WeekendDays;
		}
	}

	@Override
	public void setWeekendDays(String WeekendDays) {
		_WeekendDays = WeekendDays;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public LMSWeekends toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (LMSWeekends)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		LMSWeekendsImpl lmsWeekendsImpl = new LMSWeekendsImpl();

		lmsWeekendsImpl.setLocationId(getLocationId());
		lmsWeekendsImpl.setLocation(getLocation());
		lmsWeekendsImpl.setWeekendDays(getWeekendDays());

		lmsWeekendsImpl.resetOriginalValues();

		return lmsWeekendsImpl;
	}

	@Override
	public int compareTo(LMSWeekends lmsWeekends) {
		int primaryKey = lmsWeekends.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof LMSWeekends)) {
			return false;
		}

		LMSWeekends lmsWeekends = (LMSWeekends)obj;

		int primaryKey = lmsWeekends.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		LMSWeekendsModelImpl lmsWeekendsModelImpl = this;

		lmsWeekendsModelImpl._originalLocation = lmsWeekendsModelImpl._Location;

		lmsWeekendsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<LMSWeekends> toCacheModel() {
		LMSWeekendsCacheModel lmsWeekendsCacheModel = new LMSWeekendsCacheModel();

		lmsWeekendsCacheModel.LocationId = getLocationId();

		lmsWeekendsCacheModel.Location = getLocation();

		String Location = lmsWeekendsCacheModel.Location;

		if ((Location != null) && (Location.length() == 0)) {
			lmsWeekendsCacheModel.Location = null;
		}

		lmsWeekendsCacheModel.WeekendDays = getWeekendDays();

		String WeekendDays = lmsWeekendsCacheModel.WeekendDays;

		if ((WeekendDays != null) && (WeekendDays.length() == 0)) {
			lmsWeekendsCacheModel.WeekendDays = null;
		}

		return lmsWeekendsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{LocationId=");
		sb.append(getLocationId());
		sb.append(", Location=");
		sb.append(getLocation());
		sb.append(", WeekendDays=");
		sb.append(getWeekendDays());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.trianz.lms.model.LMSWeekends");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>LocationId</column-name><column-value><![CDATA[");
		sb.append(getLocationId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Location</column-name><column-value><![CDATA[");
		sb.append(getLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>WeekendDays</column-name><column-value><![CDATA[");
		sb.append(getWeekendDays());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = LMSWeekends.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			LMSWeekends.class
		};
	private int _LocationId;
	private String _Location;
	private String _originalLocation;
	private String _WeekendDays;
	private long _columnBitmask;
	private LMSWeekends _escapedModel;
}