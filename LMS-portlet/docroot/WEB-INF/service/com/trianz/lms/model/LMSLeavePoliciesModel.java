/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trianz.lms.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the LMSLeavePolicies service. Represents a row in the &quot;LMSLeavePolicies&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.trianz.lms.model.impl.LMSLeavePoliciesModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.trianz.lms.model.impl.LMSLeavePoliciesImpl}.
 * </p>
 *
 * @author
 * @see LMSLeavePolicies
 * @see com.trianz.lms.model.impl.LMSLeavePoliciesImpl
 * @see com.trianz.lms.model.impl.LMSLeavePoliciesModelImpl
 * @generated
 */
public interface LMSLeavePoliciesModel extends BaseModel<LMSLeavePolicies> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a l m s leave policies model instance should use the {@link LMSLeavePolicies} interface instead.
	 */

	/**
	 * Returns the primary key of this l m s leave policies.
	 *
	 * @return the primary key of this l m s leave policies
	 */
	public int getPrimaryKey();

	/**
	 * Sets the primary key of this l m s leave policies.
	 *
	 * @param primaryKey the primary key of this l m s leave policies
	 */
	public void setPrimaryKey(int primaryKey);

	/**
	 * Returns the policy ID of this l m s leave policies.
	 *
	 * @return the policy ID of this l m s leave policies
	 */
	public int getPolicyId();

	/**
	 * Sets the policy ID of this l m s leave policies.
	 *
	 * @param PolicyId the policy ID of this l m s leave policies
	 */
	public void setPolicyId(int PolicyId);

	/**
	 * Returns the project of this l m s leave policies.
	 *
	 * @return the project of this l m s leave policies
	 */
	@AutoEscape
	public String getProject();

	/**
	 * Sets the project of this l m s leave policies.
	 *
	 * @param Project the project of this l m s leave policies
	 */
	public void setProject(String Project);

	/**
	 * Returns the leave types applicable of this l m s leave policies.
	 *
	 * @return the leave types applicable of this l m s leave policies
	 */
	@AutoEscape
	public String getLeaveTypesApplicable();

	/**
	 * Sets the leave types applicable of this l m s leave policies.
	 *
	 * @param LeaveTypesApplicable the leave types applicable of this l m s leave policies
	 */
	public void setLeaveTypesApplicable(String LeaveTypesApplicable);

	/**
	 * Returns the locations applicable of this l m s leave policies.
	 *
	 * @return the locations applicable of this l m s leave policies
	 */
	@AutoEscape
	public String getLocationsApplicable();

	/**
	 * Sets the locations applicable of this l m s leave policies.
	 *
	 * @param LocationsApplicable the locations applicable of this l m s leave policies
	 */
	public void setLocationsApplicable(String LocationsApplicable);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(LMSLeavePolicies lmsLeavePolicies);

	@Override
	public int hashCode();

	@Override
	public CacheModel<LMSLeavePolicies> toCacheModel();

	@Override
	public LMSLeavePolicies toEscapedModel();

	@Override
	public LMSLeavePolicies toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}