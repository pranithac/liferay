/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.trianz.lms.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the LeaveInformationAudit service. Represents a row in the &quot;LeaveInformationAudit&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.trianz.lms.model.impl.LeaveInformationAuditModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.trianz.lms.model.impl.LeaveInformationAuditImpl}.
 * </p>
 *
 * @author
 * @see LeaveInformationAudit
 * @see com.trianz.lms.model.impl.LeaveInformationAuditImpl
 * @see com.trianz.lms.model.impl.LeaveInformationAuditModelImpl
 * @generated
 */
public interface LeaveInformationAuditModel extends BaseModel<LeaveInformationAudit> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a leave information audit model instance should use the {@link LeaveInformationAudit} interface instead.
	 */

	/**
	 * Returns the primary key of this leave information audit.
	 *
	 * @return the primary key of this leave information audit
	 */
	public int getPrimaryKey();

	/**
	 * Sets the primary key of this leave information audit.
	 *
	 * @param primaryKey the primary key of this leave information audit
	 */
	public void setPrimaryKey(int primaryKey);

	/**
	 * Returns the log ID of this leave information audit.
	 *
	 * @return the log ID of this leave information audit
	 */
	public int getLogId();

	/**
	 * Sets the log ID of this leave information audit.
	 *
	 * @param LogId the log ID of this leave information audit
	 */
	public void setLogId(int LogId);

	/**
	 * Returns the leave request ID of this leave information audit.
	 *
	 * @return the leave request ID of this leave information audit
	 */
	public int getLeaveRequestId();

	/**
	 * Sets the leave request ID of this leave information audit.
	 *
	 * @param LeaveRequestId the leave request ID of this leave information audit
	 */
	public void setLeaveRequestId(int LeaveRequestId);

	/**
	 * Returns the action of this leave information audit.
	 *
	 * @return the action of this leave information audit
	 */
	@AutoEscape
	public String getAction();

	/**
	 * Sets the action of this leave information audit.
	 *
	 * @param Action the action of this leave information audit
	 */
	public void setAction(String Action);

	/**
	 * Returns the action by of this leave information audit.
	 *
	 * @return the action by of this leave information audit
	 */
	@AutoEscape
	public String getActionBy();

	/**
	 * Sets the action by of this leave information audit.
	 *
	 * @param ActionBy the action by of this leave information audit
	 */
	public void setActionBy(String ActionBy);

	/**
	 * Returns the created date of this leave information audit.
	 *
	 * @return the created date of this leave information audit
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this leave information audit.
	 *
	 * @param CreatedDate the created date of this leave information audit
	 */
	public void setCreatedDate(Date CreatedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(LeaveInformationAudit leaveInformationAudit);

	@Override
	public int hashCode();

	@Override
	public CacheModel<LeaveInformationAudit> toCacheModel();

	@Override
	public LeaveInformationAudit toEscapedModel();

	@Override
	public LeaveInformationAudit toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}